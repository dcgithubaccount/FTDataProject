{
 "component": {
    "kind": "component",
    "scheme": "quartz",
    "syntax": "quartz:groupName/timerName",
    "title": "Quartz",
    "description": "A Quartz Component",
    "label": "scheduling",
    "consumerOnly": "true",
    "javaType": "org.apache.camel.component.quartz.QuartzComponent",
    "groupId": "org.apache.camel",
    "artifactId": "camel-quartz",
    "version": "2.16.1"
  },
  "componentProperties": {
    "factory": { "kind": "property", "type": "object", "javaType": "org.quartz.SchedulerFactory", "deprecated": "false", "description": "To use the custom SchedulerFactory which is used to create the Scheduler." },
    "scheduler": { "kind": "property", "type": "object", "javaType": "org.quartz.Scheduler", "deprecated": "false", "description": "To use the custom configured Quartz scheduler instead of creating a new Scheduler." },
    "properties": { "kind": "property", "type": "object", "javaType": "java.util.Properties", "deprecated": "false", "description": "Properties to configure the Quartz scheduler." },
    "propertiesFile": { "kind": "property", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "description": "File name of the properties to load from the classpath" },
    "startDelayedSeconds": { "kind": "property", "type": "integer", "javaType": "int", "deprecated": "false", "description": "Seconds to wait before starting the quartz scheduler." },
    "autoStartScheduler": { "kind": "property", "type": "boolean", "javaType": "boolean", "deprecated": "false", "defaultValue": "false", "description": "Whether or not the scheduler should be auto started. This options is default true" },
    "enableJmx": { "kind": "property", "type": "boolean", "javaType": "boolean", "deprecated": "false", "defaultValue": "false", "description": "Whether to enable Quartz JMX which allows to manage the Quartz scheduler from JMX. This options is default true" }
  },
  "properties": {
    "groupName": { "kind": "path", "group": "consumer", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "defaultValue": "Camel", "description": "The quartz group name to use. The combination of group name and timer name should be unique." },
    "timerName": { "kind": "path", "group": "consumer", "required": "true", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "description": "The quartz timer name to use. The combination of group name and timer name should be unique." },
    "cron": { "kind": "parameter", "group": "consumer", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "description": "Specifies a cron expression to define when to trigger." },
    "deleteJob": { "kind": "parameter", "group": "consumer", "type": "boolean", "javaType": "boolean", "deprecated": "false", "defaultValue": "true", "description": "If set to true then the trigger automatically delete when route stop. Else if set to false it will remain in scheduler. When set to false it will also mean user may reuse pre-configured trigger with camel Uri. Just ensure the names match. Notice you cannot have both deleteJob and pauseJob set to true." },
    "pauseJob": { "kind": "parameter", "group": "consumer", "type": "boolean", "javaType": "boolean", "deprecated": "false", "defaultValue": "false", "description": "If set to true then the trigger automatically pauses when route stop. Else if set to false it will remain in scheduler. When set to false it will also mean user may reuse pre-configured trigger with camel Uri. Just ensure the names match. Notice you cannot have both deleteJob and pauseJob set to true." },
    "stateful": { "kind": "parameter", "group": "consumer", "type": "boolean", "javaType": "boolean", "deprecated": "false", "defaultValue": "false", "description": "Uses a Quartz StatefulJob instead of the default job." },
    "usingFixedCamelContextName": { "kind": "parameter", "group": "consumer", "type": "boolean", "javaType": "boolean", "deprecated": "false", "defaultValue": "false", "description": "If it is true JobDataMap uses the CamelContext name directly to reference the CamelContext if it is false JobDataMap uses use the CamelContext management name which could be changed during the deploy time." },
    "exchangePattern": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "string", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "RobustInOnly", "InOut", "InOptionalOut", "OutOnly", "RobustOutOnly", "OutIn", "OutOptionalIn" ], "deprecated": "false", "defaultValue": "InOnly", "description": "Sets the default exchange pattern when creating an exchange" },
    "synchronous": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "defaultValue": "false", "description": "Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported)." }
  }
}

